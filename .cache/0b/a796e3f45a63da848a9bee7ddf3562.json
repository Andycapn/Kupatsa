{"id":"../node_modules/@uifabric/utilities/lib/string.js","dependencies":[{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/node_modules/@uifabric/utilities/lib/string.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/package.json","includedInParent":true,"mtime":1585841397987},{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/node_modules/@uifabric/utilities/package.json","includedInParent":true,"mtime":1585826162772}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.format = format;\n// Regex that finds { and } so they can be removed on a lookup for string format\nvar FORMAT_ARGS_REGEX = /[\\{\\}]/g; // Regex that finds {#} so it can be replaced by the arguments in string format\n\nvar FORMAT_REGEX = /\\{\\d+\\}/g;\n/**\n * String format method, used for scenarios where at runtime you\n * need to evaluate a formatted string given a tokenized string. This\n * usually only is needed in localization scenarios.\n\n * @example\n * ```tsx\n * \"I love {0} every {1}\".format(\"CXP\")\n * ```\n * will result in a Debug Exception.\n *\n * @public\n */\n// tslint:disable-next-line:no-any\n\nfunction format(s) {\n  var values = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    values[_i - 1] = arguments[_i];\n  }\n\n  var args = values; // Callback match function\n\n  function replace_func(match) {\n    // looks up in the args\n    // tslint:disable-next-line:no-any\n    var replacement = args[match.replace(FORMAT_ARGS_REGEX, '')]; // catches undefined in nondebug and null in debug and nondebug\n\n    if (replacement === null || replacement === undefined) {\n      replacement = '';\n    }\n\n    return replacement;\n  }\n\n  return s.replace(FORMAT_REGEX, replace_func);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"string.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"string.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"string.ts","name":null,"original":{"line":2,"column":6},"generated":{"line":8,"column":4}},{"source":"string.ts","name":null,"original":{"line":2,"column":23},"generated":{"line":8,"column":21}},{"source":"string.ts","name":null,"original":{"line":2,"column":26},"generated":{"line":8,"column":24}},{"source":"string.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":33}},{"source":"string.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":35}},{"source":"string.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"string.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":10,"column":4}},{"source":"string.ts","name":null,"original":{"line":5,"column":18},"generated":{"line":10,"column":16}},{"source":"string.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":10,"column":19}},{"source":"string.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":29}},{"source":"string.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":11,"column":0}},{"source":"string.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":24,"column":0}},{"source":"string.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":26,"column":0}},{"source":"string.ts","name":null,"original":{"line":21,"column":16},"generated":{"line":26,"column":9}},{"source":"string.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":26,"column":15}},{"source":"string.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":26,"column":16}},{"source":"string.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":26,"column":17}},{"source":"string.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":26,"column":19}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":27,"column":0}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":27,"column":6}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":27,"column":12}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":27,"column":15}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":27,"column":17}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":29,"column":7}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":29,"column":11}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":29,"column":13}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":29,"column":16}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":29,"column":19}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":29,"column":21}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":29,"column":24}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":29,"column":33}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":29,"column":34}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":29,"column":42}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":29,"column":44}},{"source":"string.ts","name":null,"original":{"line":21,"column":50},"generated":{"line":29,"column":48}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":0}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":4}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":10}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":11}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":13}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":16}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":17}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":18}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":21}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":30}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":31}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":33}},{"source":"string.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":30,"column":34}},{"source":"string.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":33,"column":0}},{"source":"string.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":33,"column":6}},{"source":"string.ts","name":null,"original":{"line":22,"column":10},"generated":{"line":33,"column":10}},{"source":"string.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":33,"column":13}},{"source":"string.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":33,"column":19}},{"source":"string.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":33,"column":20}},{"source":"string.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":33,"column":21}},{"source":"string.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":35,"column":0}},{"source":"string.ts","name":null,"original":{"line":24,"column":11},"generated":{"line":35,"column":11}},{"source":"string.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":35,"column":23}},{"source":"string.ts","name":null,"original":{"line":24,"column":24},"generated":{"line":35,"column":24}},{"source":"string.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":35,"column":29}},{"source":"string.ts","name":null,"original":{"line":24,"column":37},"generated":{"line":35,"column":31}},{"source":"string.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":36,"column":0}},{"source":"string.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":37,"column":0}},{"source":"string.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":38,"column":0}},{"source":"string.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":38,"column":8}},{"source":"string.ts","name":null,"original":{"line":27,"column":19},"generated":{"line":38,"column":19}},{"source":"string.ts","name":null,"original":{"line":27,"column":22},"generated":{"line":38,"column":22}},{"source":"string.ts","name":null,"original":{"line":27,"column":26},"generated":{"line":38,"column":26}},{"source":"string.ts","name":null,"original":{"line":27,"column":27},"generated":{"line":38,"column":27}},{"source":"string.ts","name":null,"original":{"line":27,"column":32},"generated":{"line":38,"column":32}},{"source":"string.ts","name":null,"original":{"line":27,"column":33},"generated":{"line":38,"column":33}},{"source":"string.ts","name":null,"original":{"line":27,"column":27},"generated":{"line":38,"column":40}},{"source":"string.ts","name":null,"original":{"line":27,"column":41},"generated":{"line":38,"column":41}},{"source":"string.ts","name":null,"original":{"line":27,"column":27},"generated":{"line":38,"column":58}},{"source":"string.ts","name":null,"original":{"line":27,"column":60},"generated":{"line":38,"column":60}},{"source":"string.ts","name":null,"original":{"line":27,"column":27},"generated":{"line":38,"column":62}},{"source":"string.ts","name":null,"original":{"line":27,"column":26},"generated":{"line":38,"column":63}},{"source":"string.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":38,"column":64}},{"source":"string.ts","name":null,"original":{"line":24,"column":37},"generated":{"line":38,"column":65}},{"source":"string.ts","name":null,"original":{"line":29,"column":4},"generated":{"line":38,"column":66}},{"source":"string.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":40,"column":0}},{"source":"string.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":40,"column":8}},{"source":"string.ts","name":null,"original":{"line":30,"column":19},"generated":{"line":40,"column":19}},{"source":"string.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":40,"column":24}},{"source":"string.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":40,"column":28}},{"source":"string.ts","name":null,"original":{"line":30,"column":32},"generated":{"line":40,"column":32}},{"source":"string.ts","name":null,"original":{"line":30,"column":43},"generated":{"line":40,"column":43}},{"source":"string.ts","name":null,"original":{"line":30,"column":48},"generated":{"line":40,"column":48}},{"source":"string.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":40,"column":57}},{"source":"string.ts","name":null,"original":{"line":30,"column":59},"generated":{"line":40,"column":59}},{"source":"string.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":41,"column":0}},{"source":"string.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":41,"column":6}},{"source":"string.ts","name":null,"original":{"line":31,"column":17},"generated":{"line":41,"column":17}},{"source":"string.ts","name":null,"original":{"line":31,"column":20},"generated":{"line":41,"column":20}},{"source":"string.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":41,"column":22}},{"source":"string.ts","name":null,"original":{"line":32,"column":5},"generated":{"line":42,"column":0}},{"source":"string.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":44,"column":0}},{"source":"string.ts","name":null,"original":{"line":34,"column":11},"generated":{"line":44,"column":11}},{"source":"string.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":44,"column":22}},{"source":"string.ts","name":null,"original":{"line":35,"column":3},"generated":{"line":45,"column":0}},{"source":"string.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":47,"column":0}},{"source":"string.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":47,"column":9}},{"source":"string.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":47,"column":10}},{"source":"string.ts","name":null,"original":{"line":36,"column":11},"generated":{"line":47,"column":11}},{"source":"string.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":47,"column":18}},{"source":"string.ts","name":null,"original":{"line":36,"column":19},"generated":{"line":47,"column":19}},{"source":"string.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":47,"column":31}},{"source":"string.ts","name":null,"original":{"line":36,"column":33},"generated":{"line":47,"column":33}},{"source":"string.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":47,"column":45}},{"source":"string.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":47,"column":46}},{"source":"string.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":48,"column":0}}],"sources":{"string.ts":"// Regex that finds { and } so they can be removed on a lookup for string format\nconst FORMAT_ARGS_REGEX = /[\\{\\}]/g;\n\n// Regex that finds {#} so it can be replaced by the arguments in string format\nconst FORMAT_REGEX = /\\{\\d+\\}/g;\n\n/**\n * String format method, used for scenarios where at runtime you\n * need to evaluate a formatted string given a tokenized string. This\n * usually only is needed in localization scenarios.\n\n * @example\n * ```tsx\n * \"I love {0} every {1}\".format(\"CXP\")\n * ```\n * will result in a Debug Exception.\n *\n * @public\n */\n// tslint:disable-next-line:no-any\nexport function format(s: string, ...values: any[]): string {\n  let args = values;\n  // Callback match function\n  function replace_func(match: string): string {\n    // looks up in the args\n    // tslint:disable-next-line:no-any\n    let replacement = args[match.replace(FORMAT_ARGS_REGEX, '') as any];\n\n    // catches undefined in nondebug and null in debug and nondebug\n    if (replacement === null || replacement === undefined) {\n      replacement = '';\n    }\n\n    return replacement;\n  }\n  return s.replace(FORMAT_REGEX, replace_func);\n}\n"},"lineCount":null}},"error":null,"hash":"46234648df6a85ee011afef21e77d8f2","cacheData":{"env":{}}}