{"id":"../node_modules/@uifabric/utilities/lib/assertNever.js","dependencies":[{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/node_modules/@uifabric/utilities/lib/assertNever.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/package.json","includedInParent":true,"mtime":1585841397987},{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/node_modules/@uifabric/utilities/package.json","includedInParent":true,"mtime":1585826162772}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertNever = assertNever;\n\n/**\n * AssertNever is a utility function that can be used for exhaustiveness checks in switch statements.\n *\n * @public\n */\nfunction assertNever(x) {\n  throw new Error('Unexpected object: ' + x);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"assertNever.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"assertNever.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":13,"column":0}},{"source":"assertNever.ts","name":null,"original":{"line":6,"column":16},"generated":{"line":13,"column":9}},{"source":"assertNever.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":13,"column":20}},{"source":"assertNever.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":13,"column":21}},{"source":"assertNever.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":13,"column":22}},{"source":"assertNever.ts","name":null,"original":{"line":6,"column":36},"generated":{"line":13,"column":24}},{"source":"assertNever.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":14,"column":0}},{"source":"assertNever.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":14,"column":8}},{"source":"assertNever.ts","name":null,"original":{"line":7,"column":12},"generated":{"line":14,"column":12}},{"source":"assertNever.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":14,"column":17}},{"source":"assertNever.ts","name":null,"original":{"line":7,"column":18},"generated":{"line":14,"column":18}},{"source":"assertNever.ts","name":null,"original":{"line":7,"column":42},"generated":{"line":14,"column":42}},{"source":"assertNever.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":14,"column":43}},{"source":"assertNever.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":14,"column":44}},{"source":"assertNever.ts","name":null,"original":{"line":8,"column":1},"generated":{"line":15,"column":0}}],"sources":{"assertNever.ts":"/**\n * AssertNever is a utility function that can be used for exhaustiveness checks in switch statements.\n *\n * @public\n */\nexport function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x);\n}\n"},"lineCount":null}},"error":null,"hash":"f2a03875b6f118707ace25d31f7fec24","cacheData":{"env":{}}}