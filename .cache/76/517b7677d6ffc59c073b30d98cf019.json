{"id":"../node_modules/@uifabric/utilities/lib/overflow.js","dependencies":[{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/node_modules/@uifabric/utilities/lib/overflow.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/package.json","includedInParent":true,"mtime":1585841397987},{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/node_modules/@uifabric/utilities/package.json","includedInParent":true,"mtime":1585826162772}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasHorizontalOverflow = hasHorizontalOverflow;\nexports.hasVerticalOverflow = hasVerticalOverflow;\nexports.hasOverflow = hasOverflow;\n\n/**\n * Detects whether an element's content has horizontal overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nfunction hasHorizontalOverflow(element) {\n  return element.clientWidth < element.scrollWidth;\n}\n/**\n * Detects whether an element's content has vertical overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\n\n\nfunction hasVerticalOverflow(element) {\n  return element.clientHeight < element.scrollHeight;\n}\n/**\n * Detects whether an element's content has overflow in any direction\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\n\n\nfunction hasOverflow(element) {\n  return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"overflow.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}},{"source":"overflow.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":17,"column":0}},{"source":"overflow.ts","name":null,"original":{"line":8,"column":16},"generated":{"line":17,"column":9}},{"source":"overflow.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":17,"column":30}},{"source":"overflow.ts","name":null,"original":{"line":8,"column":38},"generated":{"line":17,"column":31}},{"source":"overflow.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":17,"column":38}},{"source":"overflow.ts","name":null,"original":{"line":8,"column":58},"generated":{"line":17,"column":40}},{"source":"overflow.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":18,"column":0}},{"source":"overflow.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":18,"column":9}},{"source":"overflow.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":18,"column":16}},{"source":"overflow.ts","name":null,"original":{"line":9,"column":17},"generated":{"line":18,"column":17}},{"source":"overflow.ts","name":null,"original":{"line":9,"column":9},"generated":{"line":18,"column":28}},{"source":"overflow.ts","name":null,"original":{"line":9,"column":31},"generated":{"line":18,"column":31}},{"source":"overflow.ts","name":null,"original":{"line":9,"column":38},"generated":{"line":18,"column":38}},{"source":"overflow.ts","name":null,"original":{"line":9,"column":39},"generated":{"line":18,"column":39}},{"source":"overflow.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":18,"column":50}},{"source":"overflow.ts","name":null,"original":{"line":10,"column":1},"generated":{"line":19,"column":0}},{"source":"overflow.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":20,"column":0}},{"source":"overflow.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":29,"column":0}},{"source":"overflow.ts","name":null,"original":{"line":19,"column":16},"generated":{"line":29,"column":9}},{"source":"overflow.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":29,"column":28}},{"source":"overflow.ts","name":null,"original":{"line":19,"column":36},"generated":{"line":29,"column":29}},{"source":"overflow.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":29,"column":36}},{"source":"overflow.ts","name":null,"original":{"line":19,"column":56},"generated":{"line":29,"column":38}},{"source":"overflow.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":30,"column":0}},{"source":"overflow.ts","name":null,"original":{"line":20,"column":9},"generated":{"line":30,"column":9}},{"source":"overflow.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":30,"column":16}},{"source":"overflow.ts","name":null,"original":{"line":20,"column":17},"generated":{"line":30,"column":17}},{"source":"overflow.ts","name":null,"original":{"line":20,"column":9},"generated":{"line":30,"column":29}},{"source":"overflow.ts","name":null,"original":{"line":20,"column":32},"generated":{"line":30,"column":32}},{"source":"overflow.ts","name":null,"original":{"line":20,"column":39},"generated":{"line":30,"column":39}},{"source":"overflow.ts","name":null,"original":{"line":20,"column":40},"generated":{"line":30,"column":40}},{"source":"overflow.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":30,"column":52}},{"source":"overflow.ts","name":null,"original":{"line":21,"column":1},"generated":{"line":31,"column":0}},{"source":"overflow.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":32,"column":0}},{"source":"overflow.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":41,"column":0}},{"source":"overflow.ts","name":null,"original":{"line":30,"column":16},"generated":{"line":41,"column":9}},{"source":"overflow.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":41,"column":20}},{"source":"overflow.ts","name":null,"original":{"line":30,"column":28},"generated":{"line":41,"column":21}},{"source":"overflow.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":41,"column":28}},{"source":"overflow.ts","name":null,"original":{"line":30,"column":48},"generated":{"line":41,"column":30}},{"source":"overflow.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":42,"column":0}},{"source":"overflow.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":42,"column":9}},{"source":"overflow.ts","name":null,"original":{"line":31,"column":30},"generated":{"line":42,"column":30}},{"source":"overflow.ts","name":null,"original":{"line":31,"column":31},"generated":{"line":42,"column":31}},{"source":"overflow.ts","name":null,"original":{"line":31,"column":30},"generated":{"line":42,"column":38}},{"source":"overflow.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":42,"column":39}},{"source":"overflow.ts","name":null,"original":{"line":31,"column":43},"generated":{"line":42,"column":43}},{"source":"overflow.ts","name":null,"original":{"line":31,"column":62},"generated":{"line":42,"column":62}},{"source":"overflow.ts","name":null,"original":{"line":31,"column":63},"generated":{"line":42,"column":63}},{"source":"overflow.ts","name":null,"original":{"line":31,"column":62},"generated":{"line":42,"column":70}},{"source":"overflow.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":42,"column":71}},{"source":"overflow.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":43,"column":0}}],"sources":{"overflow.ts":"/**\n * Detects whether an element's content has horizontal overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasHorizontalOverflow(element: HTMLElement): boolean {\n  return element.clientWidth < element.scrollWidth;\n}\n\n/**\n * Detects whether an element's content has vertical overflow\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasVerticalOverflow(element: HTMLElement): boolean {\n  return element.clientHeight < element.scrollHeight;\n}\n\n/**\n * Detects whether an element's content has overflow in any direction\n *\n * @public\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasOverflow(element: HTMLElement): boolean {\n  return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\n}\n"},"lineCount":null}},"error":null,"hash":"dc897f49f3f686c709d960cf7e009369","cacheData":{"env":{}}}