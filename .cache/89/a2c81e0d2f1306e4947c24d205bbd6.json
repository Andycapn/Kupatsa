{"id":"../node_modules/@uifabric/utilities/lib/osDetector.js","dependencies":[{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/node_modules/@uifabric/utilities/lib/osDetector.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/package.json","includedInParent":true,"mtime":1585841397987},{"name":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/node_modules/@uifabric/utilities/package.json","includedInParent":true,"mtime":1585826162772},{"name":"./dom/getWindow","loc":{"line":1,"column":26},"parent":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/node_modules/@uifabric/utilities/lib/osDetector.js","resolved":"/Users/andrewndhlovu/Documents/My Projects/kupatsa/node_modules/@uifabric/utilities/lib/dom/getWindow.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isMac = isMac;\n\nvar _getWindow = require(\"./dom/getWindow\");\n\nvar isMacResult;\n/**\n * Returns true if the user is on a Mac. Caches the result value.\n * @param reset - Reset the cached result value (mainly for testing).\n */\n\nfunction isMac(reset) {\n  if (typeof isMacResult === 'undefined' || reset) {\n    var win = (0, _getWindow.getWindow)();\n    var userAgent = win && win.navigator.userAgent;\n    isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;\n  }\n\n  return !!isMacResult;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"osDetector.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"osDetector.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"osDetector.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":10,"column":4}},{"source":"osDetector.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":15}},{"source":"osDetector.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"osDetector.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":16,"column":0}},{"source":"osDetector.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":16,"column":9}},{"source":"osDetector.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":16,"column":14}},{"source":"osDetector.ts","name":null,"original":{"line":9,"column":22},"generated":{"line":16,"column":15}},{"source":"osDetector.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":16,"column":20}},{"source":"osDetector.ts","name":null,"original":{"line":9,"column":37},"generated":{"line":16,"column":22}},{"source":"osDetector.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":17,"column":0}},{"source":"osDetector.ts","name":null,"original":{"line":10,"column":6},"generated":{"line":17,"column":6}},{"source":"osDetector.ts","name":null,"original":{"line":10,"column":13},"generated":{"line":17,"column":13}},{"source":"osDetector.ts","name":null,"original":{"line":10,"column":6},"generated":{"line":17,"column":24}},{"source":"osDetector.ts","name":null,"original":{"line":10,"column":29},"generated":{"line":17,"column":29}},{"source":"osDetector.ts","name":null,"original":{"line":10,"column":6},"generated":{"line":17,"column":40}},{"source":"osDetector.ts","name":null,"original":{"line":10,"column":44},"generated":{"line":17,"column":44}},{"source":"osDetector.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":17,"column":49}},{"source":"osDetector.ts","name":null,"original":{"line":10,"column":51},"generated":{"line":17,"column":51}},{"source":"osDetector.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":18,"column":0}},{"source":"osDetector.ts","name":null,"original":{"line":11,"column":10},"generated":{"line":18,"column":8}},{"source":"osDetector.ts","name":null,"original":{"line":11,"column":13},"generated":{"line":18,"column":11}},{"source":"osDetector.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":18,"column":14}},{"source":"osDetector.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":18,"column":41}},{"source":"osDetector.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":19,"column":0}},{"source":"osDetector.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":19,"column":8}},{"source":"osDetector.ts","name":null,"original":{"line":12,"column":19},"generated":{"line":19,"column":17}},{"source":"osDetector.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":19,"column":20}},{"source":"osDetector.ts","name":null,"original":{"line":12,"column":25},"generated":{"line":19,"column":23}},{"source":"osDetector.ts","name":null,"original":{"line":12,"column":29},"generated":{"line":19,"column":27}},{"source":"osDetector.ts","name":null,"original":{"line":12,"column":32},"generated":{"line":19,"column":30}},{"source":"osDetector.ts","name":null,"original":{"line":12,"column":33},"generated":{"line":19,"column":31}},{"source":"osDetector.ts","name":null,"original":{"line":12,"column":29},"generated":{"line":19,"column":40}},{"source":"osDetector.ts","name":null,"original":{"line":12,"column":43},"generated":{"line":19,"column":41}},{"source":"osDetector.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":19,"column":50}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":20,"column":0}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":20,"column":4}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":20,"column":15}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":18},"generated":{"line":20,"column":18}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":19},"generated":{"line":20,"column":19}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":20},"generated":{"line":20,"column":20}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":18},"generated":{"line":20,"column":29}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":33},"generated":{"line":20,"column":33}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":42},"generated":{"line":20,"column":42}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":43},"generated":{"line":20,"column":43}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":33},"generated":{"line":20,"column":50}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":51},"generated":{"line":20,"column":51}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":33},"generated":{"line":20,"column":62}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":68},"generated":{"line":20,"column":68}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":69},"generated":{"line":20,"column":69}},{"source":"osDetector.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":20,"column":70}},{"source":"osDetector.ts","name":null,"original":{"line":15,"column":3},"generated":{"line":21,"column":0}},{"source":"osDetector.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":23,"column":0}},{"source":"osDetector.ts","name":null,"original":{"line":16,"column":9},"generated":{"line":23,"column":9}},{"source":"osDetector.ts","name":null,"original":{"line":16,"column":10},"generated":{"line":23,"column":10}},{"source":"osDetector.ts","name":null,"original":{"line":16,"column":11},"generated":{"line":23,"column":11}},{"source":"osDetector.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":23,"column":22}},{"source":"osDetector.ts","name":null,"original":{"line":17,"column":1},"generated":{"line":24,"column":0}}],"sources":{"osDetector.ts":"import { getWindow } from './dom/getWindow';\n\nlet isMacResult: boolean | undefined;\n\n/**\n * Returns true if the user is on a Mac. Caches the result value.\n * @param reset - Reset the cached result value (mainly for testing).\n */\nexport function isMac(reset?: boolean): boolean {\n  if (typeof isMacResult === 'undefined' || reset) {\n    const win = getWindow();\n    const userAgent = win && win.navigator.userAgent;\n\n    isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;\n  }\n  return !!isMacResult;\n}\n"},"lineCount":null}},"error":null,"hash":"17d67274a5d4602b5e333881526345a8","cacheData":{"env":{}}}